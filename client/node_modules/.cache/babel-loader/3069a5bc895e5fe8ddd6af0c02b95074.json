{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Desktop/react-native-app/ascent-web/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport moment from 'moment';\nimport LandingPage from './components/LandingPage';\nimport Login from './components/Login/Login.js';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport ClientPage from './components/ClientPage/ClientPage';\nimport LogAWorkout from './components/LogAWorkout/LogAWorkout';\nimport SyncPage from './components/SyncPage/SyncPage';\nimport SyncRedirect from './components/SyncRedirect/SyncRedirect';\nimport SyncingPage from './components/SyncingPage/SyncingPage';\nimport Scatter from './components/Graph/Graphs';\nimport firebase from 'firebase';\nimport { firestore } from 'firebase';\nvar config = {\n  apiKey: \"AIzaSyDQSDfPrKEo3mwSOzTQjK2KxaZlIFEey6E\",\n  authDomain: \"ascent-2982c.firebaseapp.com\",\n  databaseURL: \"https://ascent-2982c.firebaseio.com\",\n  projectId: \"ascent-2982c\",\n  storageBucket: \"ascent-2982c.appspot.com\",\n  messagingSenderId: \"101065531447\"\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      clients: [],\n      first: '',\n      last: '',\n      picked: '',\n      stress_scores: []\n    };\n\n    _this.getStressScores = function () {\n      firestore().collection('Users').doc(_this.state.picked).collection('Cardio Workouts').orderBy('start_date_local', 'asc').get().then(function (snapshot) {\n        var stressArray = [];\n        var cardioArrayYesterday = [];\n        var today = new Date();\n        var yesterday = new Date(today - 86400000);\n\n        var formattedToday = _this.formatDate(today);\n\n        var formattedYesterday = _this.formatDate(yesterday);\n\n        snapshot.forEach(function (doc) {\n          var docDate = doc.data().start_date_local.slice(0, 10);\n          stressArray.push({\n            date: docDate,\n            score: doc.data().stress_score\n          });\n\n          if (docDate === formattedYesterday) {\n            cardioArrayYesterday.push(doc.data());\n          }\n        });\n\n        _this.setState({\n          cardioArrayYesterday: cardioArrayYesterday\n        });\n\n        var fullStressArray = [];\n\n        for (var i = 0; i < stressArray.length; i++) {\n          fullStressArray.push(stressArray[i]);\n\n          if (i < stressArray.length - 1) {\n            var date1 = moment(stressArray[i].date);\n            var date2 = moment(stressArray[i + 1].date);\n            var dayDifference = (date2 - date1) / 86400000;\n\n            if (dayDifference > 1) {\n              for (var x = 1; x < dayDifference; x++) {\n                date1 = moment(date1).add(1, 'days').format('Y-MM-DD');\n                fullStressArray.push({\n                  date: date1,\n                  score: 0\n                });\n              }\n            }\n          } else {\n            // adds zeros to the end of the array to reach today's date if needed.\n            var lastWorkoutDate = new Date(stressArray[stressArray.length - 1].date.slice(0, 10));\n            var daysSinceLastWorkout = Math.floor((today - lastWorkoutDate) / (1000 * 60 * 60 * 24));\n\n            if (daysSinceLastWorkout > 0) {\n              for (var _i = 1; _i < daysSinceLastWorkout + 1; _i++) {\n                lastWorkoutDate = moment(lastWorkoutDate).add(1, 'days').format('Y-MM-DD');\n                fullStressArray.push({\n                  date: lastWorkoutDate,\n                  score: 0\n                });\n              }\n            }\n          }\n        }\n\n        _this.setState({\n          stress_scores: fullStressArray\n        }, function () {\n          _this.getAllScores();\n        });\n      });\n    };\n\n    _this.getAllScores = function () {\n      //grab stress scores\n      var stressArray = _this.state.stress_scores; // fitness\n\n      var fitness = 0;\n      var fitnessArray = [];\n      var fitnessMultiplier = 2 / 43; //fatigue\n\n      var fatigue = 0;\n      var fatigueArray = [];\n      var faitgueMultiplier = 1 / 4; // freshness\n\n      var freshness = 0;\n      var freshnessArray = [];\n      var stress;\n\n      for (var i = 0; i < stressArray.length; i++) {\n        // Reached the end on the stress Array. We don't want to throw and error \n        // by checking the next index ( doesn't exist)\n        if (i === stressArray.length - 1) {\n          var date = moment(stressArray[i].date);\n          stress = stress + stressArray[i].score;\n          console.log(stress);\n          fitness += (stress - fitness) * fitnessMultiplier;\n          fatigue += (stress - fatigue) * faitgueMultiplier;\n          freshness = fitness - fatigue;\n          fitnessArray.push({\n            x: date,\n            y: fitness\n          });\n          fatigueArray.push({\n            x: date,\n            y: fatigue\n          });\n          freshnessArray.push({\n            x: date,\n            y: freshness\n          });\n        } else {\n          stress = stressArray[i].score;\n\n          if (stressArray[i].date === stressArray[i + 1].date) {\n            stress += stressArray[i + 1].score;\n          } else {\n            var _date = moment(stressArray[i].date);\n\n            fitness += (stress - fitness) * fitnessMultiplier;\n            fitnessArray.push({\n              x: _date,\n              y: fitness\n            });\n            fatigue += (stress - fatigue) * faitgueMultiplier;\n            fatigueArray.push({\n              x: _date,\n              y: fatigue\n            });\n            freshness = fitness - fatigue;\n            freshnessArray.push({\n              x: _date,\n              y: freshness\n            });\n          }\n        }\n      }\n\n      _this.setState({\n        fitness: fitnessArray,\n        fatigue: fatigueArray,\n        freshness: freshnessArray\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this.handleClientPick = _this.handleClientPick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.upLoadClients = _this.upLoadClients.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.redirectClient = _this.redirectClient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClientPick\",\n    value: function handleClientPick(client) {\n      var _this2 = this;\n\n      this.setState({\n        picked: client.id,\n        first: client.first,\n        last: client.last\n      }, function () {\n        _this2.getStressScores();\n      });\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n  }, {\n    key: \"upLoadClients\",\n    value: function upLoadClients(clients) {\n      this.setState({\n        clients: clients\n      });\n    }\n  }, {\n    key: \"redirectClient\",\n    value: function redirectClient(client) {\n      this.setState({\n        picked: client\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      if (!firebase.apps.length) {\n        firebase.initializeApp(config);\n      }\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this3.setState({\n          user: user\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(LandingPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/Login\",\n        render: function render(history) {\n          return React.createElement(Login, {\n            history: history,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          return null;\n        } else {\n          console.log('hit2');\n          return React.createElement(Redirect, {\n            to: \"/Login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          });\n        }\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/Dashboard\",\n        render: function render() {\n          return React.createElement(Dashboard, {\n            all: _this4.state,\n            handleClientPick: _this4.handleClientPick,\n            uploadClients: _this4.upLoadClients,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/ClientPage\",\n        render: function render() {\n          return React.createElement(ClientPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/LogAWorkout\",\n        render: function render() {\n          return React.createElement(LogAWorkout, {\n            all: _this4.state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/Sync\",\n        render: function render(history) {\n          return React.createElement(SyncPage, {\n            history: history,\n            all: _this4.state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/redirect_page\",\n        render: function render(history) {\n          return React.createElement(SyncRedirect, {\n            redirectClient: _this4.redirectClient,\n            history: history,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/syncingPage\",\n        render: function render(history) {\n          return React.createElement(SyncingPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/Graphs\",\n        render: function render(history) {\n          return React.createElement(Scatter, {\n            fitness: _this4.state.fitness,\n            fatigue: _this4.state.fatigue,\n            freshness: _this4.state.freshness,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"*\",\n        render: function render() {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/react-native-app/ascent-web/client/src/App.js"],"names":["React","Component","Route","Switch","Redirect","BrowserRouter","Router","moment","LandingPage","Login","Dashboard","ClientPage","LogAWorkout","SyncPage","SyncRedirect","SyncingPage","Scatter","firebase","firestore","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","props","state","clients","first","last","picked","stress_scores","getStressScores","collection","doc","orderBy","get","then","snapshot","stressArray","cardioArrayYesterday","today","Date","yesterday","formattedToday","formatDate","formattedYesterday","forEach","docDate","data","start_date_local","slice","push","date","score","stress_score","setState","fullStressArray","i","length","date1","date2","dayDifference","x","add","format","lastWorkoutDate","daysSinceLastWorkout","Math","floor","getAllScores","fitness","fitnessArray","fitnessMultiplier","fatigue","fatigueArray","faitgueMultiplier","freshness","freshnessArray","stress","console","log","y","handleClientPick","bind","upLoadClients","redirectClient","client","id","d","month","getMonth","day","getDate","year","getFullYear","join","apps","initializeApp","auth","onAuthStateChanged","user","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport moment from 'moment';\n\n\nimport LandingPage from './components/LandingPage';\nimport Login from './components/Login/Login.js';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport ClientPage from './components/ClientPage/ClientPage';\nimport LogAWorkout from './components/LogAWorkout/LogAWorkout';\nimport SyncPage from './components/SyncPage/SyncPage';\nimport SyncRedirect from './components/SyncRedirect/SyncRedirect';\nimport SyncingPage from './components/SyncingPage/SyncingPage';\nimport Scatter from './components/Graph/Graphs'\n\nimport firebase from 'firebase';\nimport { firestore } from 'firebase';\n\n\n\nconst config = {\n  apiKey: \"AIzaSyDQSDfPrKEo3mwSOzTQjK2KxaZlIFEey6E\",\n  authDomain: \"ascent-2982c.firebaseapp.com\",\n  databaseURL: \"https://ascent-2982c.firebaseio.com\",\n  projectId: \"ascent-2982c\",\n  storageBucket: \"ascent-2982c.appspot.com\",\n  messagingSenderId: \"101065531447\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClientPick = this.handleClientPick.bind(this);\n    this.upLoadClients = this.upLoadClients.bind(this);\n    this.redirectClient = this.redirectClient.bind(this);\n  }\n\n\n  state = {\n    clients: [],\n    first: '',\n    last: '',\n    picked: '',\n    stress_scores: []\n\n  }\n\n  handleClientPick(client) {\n    this.setState({ picked: client.id, first: client.first, last: client.last }, () => {\n      this.getStressScores()\n    })\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  getStressScores = () => {\n    firestore().collection('Users').doc(this.state.picked).collection('Cardio Workouts').orderBy('start_date_local', 'asc').get()\n      .then(snapshot => {\n        var stressArray = [];\n        var cardioArrayYesterday = [];\n        var today = new Date()\n        var yesterday = new Date(today - 86400000)\n        let formattedToday = this.formatDate(today)\n        let formattedYesterday = this.formatDate(yesterday)\n\n\n        snapshot.forEach(doc => {\n          let docDate = doc.data().start_date_local.slice(0, 10)\n          stressArray.push({ date: docDate, score: doc.data().stress_score })\n\n          if (docDate === formattedYesterday) {\n            cardioArrayYesterday.push(doc.data())\n          }\n        });\n\n        this.setState({ cardioArrayYesterday: cardioArrayYesterday })\n\n\n        var fullStressArray = [];\n\n        for (let i = 0; i < stressArray.length; i++) {\n\n          fullStressArray.push(stressArray[i])\n\n          if (i < stressArray.length - 1) {\n\n            var date1 = moment(stressArray[i].date);\n            var date2 = moment(stressArray[i + 1].date);\n            var dayDifference = (date2 - date1) / 86400000;\n\n            if (dayDifference > 1) {\n              for (let x = 1; x < dayDifference; x++) {\n                date1 = moment(date1).add(1, 'days').format('Y-MM-DD')\n                fullStressArray.push({ date: date1, score: 0 })\n\n              }\n            }\n          }\n\n          else {\n            // adds zeros to the end of the array to reach today's date if needed.\n            let lastWorkoutDate = new Date(stressArray[stressArray.length - 1].date.slice(0, 10));\n            let daysSinceLastWorkout = Math.floor((today - lastWorkoutDate) / (1000 * 60 * 60 * 24));\n            if (daysSinceLastWorkout > 0) {\n              for (let i = 1; i < daysSinceLastWorkout + 1; i++) {\n                lastWorkoutDate = moment(lastWorkoutDate).add(1, 'days').format('Y-MM-DD')\n                fullStressArray.push({ date: lastWorkoutDate, score: 0 })\n              }\n            }\n          }\n\n        }\n\n        this.setState({ stress_scores: fullStressArray }, () => {\n          this.getAllScores()\n        })\n\n\n      })\n\n  }\n\n\n\n\n\n\n  getAllScores = () => {\n    //grab stress scores\n    var stressArray = this.state.stress_scores;\n    // fitness\n    let fitness = 0;\n    let fitnessArray = [];\n    let fitnessMultiplier = (2 / 43);\n\n    //fatigue\n    let fatigue = 0;\n    let fatigueArray = [];\n    let faitgueMultiplier = (1 / 4);\n\n    // freshness\n    let freshness = 0;\n    let freshnessArray = []\n    let stress\n\n\n\n    for (let i = 0; i < stressArray.length; i++) {\n\n      // Reached the end on the stress Array. We don't want to throw and error \n      // by checking the next index ( doesn't exist)\n\n      if (i === stressArray.length - 1) {\n        let date = moment(stressArray[i].date)\n        stress = stress + stressArray[i].score\n        console.log(stress)\n\n        fitness += (stress - fitness) * fitnessMultiplier;\n        fatigue += (stress - fatigue) * faitgueMultiplier;\n        freshness = fitness - fatigue;\n\n\n        fitnessArray.push({ x: date, y: fitness });\n        fatigueArray.push({ x: date, y: fatigue })\n        freshnessArray.push({ x: date, y: freshness })\n      }\n\n\n      else {\n\n        stress = stressArray[i].score\n\n        if (stressArray[i].date === stressArray[i + 1].date) {\n          stress += stressArray[i + 1].score\n\n        }\n        else {\n\n          let date = moment(stressArray[i].date)\n\n\n          fitness += (stress - fitness) * fitnessMultiplier;\n          fitnessArray.push({ x: date, y: fitness });\n\n          fatigue += (stress - fatigue) * faitgueMultiplier;\n          fatigueArray.push({ x: date, y: fatigue })\n\n          freshness = fitness - fatigue\n          freshnessArray.push({ x: date, y: freshness })\n        }\n      }\n    }\n\n    this.setState({ fitness: fitnessArray, fatigue: fatigueArray, freshness: freshnessArray }, () => {\n      console.log(this.state)\n    })\n\n\n  }\n\n\n\n  upLoadClients(clients) {\n    this.setState({ clients: clients })\n  }\n\n  redirectClient(client) {\n    this.setState({ picked: client })\n  }\n\n\n\n  componentWillMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n    firebase.auth().onAuthStateChanged((user)=> {\n     this.setState({user: user})\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" render={() => <LandingPage />} />\n\n              <Route exact path='/Login' render={(history) => {\n                return <Login history={history}/>\n              \n\n              }} />\n\n              {firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                  return null\n                }\n                else {\n                  console.log('hit2')\n                  return <Redirect to='/Login' />\n                }\n              })}\n\n\n              <Route exact path='/Dashboard' render={() => {\n                return (\n                  <Dashboard\n                    all={this.state}\n                    handleClientPick={this.handleClientPick}\n                    uploadClients={this.upLoadClients}\n                  />)\n              }} />\n\n              <Route exact path='/ClientPage' render={() =>\n                <ClientPage />\n              } />\n\n              <Route exact path='/LogAWorkout' render={() => {\n                return (<LogAWorkout all={this.state} />)\n              }} />\n\n              <Route exact path='/Sync' render={(history) => {\n                return (\n                  <SyncPage\n                    history={history}\n                    all={this.state} />)\n              }} />\n\n              <Route path='/redirect_page' render={(history) => {\n                return <SyncRedirect\n                  redirectClient={this.redirectClient}\n                  history={history} />\n              }} />\n\n              <Route exact path='/syncingPage' render={(history) => {\n                return (<SyncingPage />)\n              }} />\n\n              <Route exact path='/Graphs' render={(history) => {\n                return (<Scatter\n                  fitness={this.state.fitness}\n                  fatigue={this.state.fatigue}\n                  freshness={this.state.freshness}\n                />)\n              }} />\n\n              <Route path='*' render={() => {\n                return (<Redirect to='/' />)\n              }} />\n\n            </Switch>\n\n          </div>\n        </Router>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}