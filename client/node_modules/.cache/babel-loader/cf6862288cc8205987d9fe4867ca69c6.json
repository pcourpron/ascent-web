{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/react-native-app/ascent-web/client/src/components/Dashboard/Dashboard.js\";\nimport React from 'react';\nimport ClientPick from '../ClientPick/ClientPick.js';\nimport FrontDash from '../FrontDash/FrontDash.js';\nimport { Navbar, NavbarBrand, NavItem, NavLink, Collapse, NavbarToggler, Nav } from 'reactstrap';\nimport { auth, firestore } from '../firebase/firebase';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: true\n    };\n\n    _this.componentWillMount = function () {\n      var clientPromise = new Promise(function (resolve, reject) {\n        auth.onAuthStateChanged(function (user) {\n          var newClients = [];\n          firestore.collection('Users').doc(user.uid).collection('Clients').get().then( //grab all the clients names\n          function (clients) {\n            var wait = clients.docs.length;\n            clients.forEach(function (client) {\n              firestore.collection('Users').doc(client.id).get().then(function (doc) {\n                var newClient = doc.data();\n                newClient['id'] = client.id;\n                newClients.push(newClient);\n                wait--;\n\n                if (wait === 0) {\n                  resolve(newClients);\n                }\n              });\n            });\n          });\n        });\n      });\n      clientPromise.then(function (value) {\n        _this.props.uploadClients(value);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        style: {\n          height: '100vh',\n          backgroundImage: 'linear-gradient(to right top, #0043a8, #007cdb, #00abc8, #00d27f, #a8eb12)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        dark: true,\n        fixed: \"top\",\n        expand: \"md\",\n        style: {\n          backgroundColor: 'teal'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Ascent\")), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.all.picked === '' ? null : React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/LogAWorkout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Log A Workout\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/LogMetrics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Log Metrics\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/Graphs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Graphs\")))))), this.props.all.picked === '' ? React.createElement(ClientPick, {\n        clients: this.props.all.clients,\n        handleClientPick: this.props.handleClientPick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : React.createElement(FrontDash, {\n        first: this.props.all.first,\n        last: this.props.all.last,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/admin/Desktop/react-native-app/ascent-web/client/src/components/Dashboard/Dashboard.js"],"names":["React","ClientPick","FrontDash","Navbar","NavbarBrand","NavItem","NavLink","Collapse","NavbarToggler","Nav","auth","firestore","Dashboard","state","isOpen","componentWillMount","clientPromise","Promise","resolve","reject","onAuthStateChanged","user","newClients","collection","doc","uid","get","then","clients","wait","docs","length","forEach","client","id","newClient","data","push","value","props","uploadClients","height","backgroundImage","backgroundColor","toggle","all","picked","handleClientPick","first","last","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport ClientPick from '../ClientPick/ClientPick.js'\nimport FrontDash from '../FrontDash/FrontDash.js'\n\nimport { Navbar, NavbarBrand, NavItem, NavLink, Collapse, NavbarToggler, Nav } from 'reactstrap'\nimport { auth, firestore } from '../firebase/firebase'\n\n\n\nclass Dashboard extends React.Component {\n    state ={\n        isOpen: true\n    }\n  \n    componentWillMount = () => {\n\n        var clientPromise = new Promise(function (resolve, reject) {\n            auth.onAuthStateChanged(function (user) {\n                var newClients = []\n                firestore.collection('Users').doc(user.uid).collection('Clients').get()\n                    .then(\n                        //grab all the clients names\n                        (clients) => {\n                            let wait = clients.docs.length\n                            clients.forEach(client => {\n                                firestore.collection('Users').doc(client.id).get()\n                                    .then(\n                                        (doc) => {\n                                            let newClient = doc.data()\n                                            newClient['id'] = client.id\n                                            newClients.push(newClient)\n                                            wait--\n                                            if (wait === 0) {\n                                                resolve(newClients)\n                                            }\n                                        }\n                                    )\n                            })\n                        }\n                    )\n            })\n        })\n        clientPromise.then((value) => {\n        \n        this.props.uploadClients(value)\n        })\n    }\n\n\n    render() {\n        return (\n            <div className='container-fluid' style={{ height: '100vh', backgroundImage: 'linear-gradient(to right top, #0043a8, #007cdb, #00abc8, #00d27f, #a8eb12)' }}>\n                <Navbar dark fixed='top' expand=\"md\" style={{ backgroundColor: 'teal' }}>\n                    <div className='container'>\n\n                        <NavbarBrand href=\"/\"><h3>Ascent</h3></NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                        { this.props.all.picked === ''? null:\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <NavLink href=\"/LogAWorkout\">Log A Workout</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/LogMetrics\">Log Metrics</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/Graphs\">Graphs</NavLink>\n                                </NavItem>\n                            </Nav>\n                        }\n                        </Collapse>\n                    </div>\n                </Navbar>\n                {this.props.all.picked === ''? \n                <ClientPick\n                clients= {this.props.all.clients}\n                handleClientPick = {this.props.handleClientPick}\n                />\n                :\n                <FrontDash\n                first= {this.props.all.first}\n                last = {this.props.all.last}/>\n                }\n            </div>\n\n\n\n        )\n    }\n}\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}