{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/react-native-app/ascent-web/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/react-native-app/ascent-web/client/src/components/Dashboard/Dashboard.js\";\nimport React from 'react';\nimport ClientPick from '../ClientPick/ClientPick.js';\nimport FrontDash from '../FrontDash/FrontDash.js';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../ClientPickNavbar/ClientPickNavbar';\nimport { auth, firestore } from '../firebase/firebase';\nimport '../../App.css';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.componentWillMount = function () {\n      if (_this.props.all.picked !== '' || _this.props.all.picked !== undefined) {\n        _this.props.handleClientPick(_this.props.all.picked);\n      }\n\n      var clientPromise = new Promise(function (resolve, reject) {\n        auth.onAuthStateChanged(function (user) {\n          var newClients = [];\n          firestore.collection('Users').doc(user.uid).collection('Clients').get().then( //grab all the clients names\n          function (clients) {\n            var wait = clients.docs.length;\n            clients.forEach(function (client) {\n              firestore.collection('Users').doc(client.id).get().then(function (doc) {\n                var newClient = doc.data();\n                newClient['id'] = client.id;\n                newClients.push(newClient);\n                wait--;\n\n                if (wait === 0) {\n                  resolve(newClients);\n                }\n              });\n            });\n          });\n        });\n      });\n      clientPromise.then(function (value) {\n        _this.props.uploadClients(value);\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        style: {\n          minHeight: '100vh',\n          backgroundImage: 'url(https://images.unsplash.com/photo-1493690283958-32df2c86326e?ixlib=rb-0.3.5&s=b62d34e46e0ddc9b507068c1aab921f9&auto=format&fit=crop&w=1496&q=80)',\n          paddingTop: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'rgba(255,255,255,.5)',\n          height: '100%',\n          width: '100%',\n          position: 'absolute',\n          marginTop: '-100px',\n          marginLeft: '-15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), this.props.all.picked === '' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        picked: this.props.all.picked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(ClientPick, {\n        clients: this.props.all.clients,\n        handleClientPick: this.props.handleClientPick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        picked: this.props.all.picked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(FrontDash, {\n        first: this.props.all.first,\n        last: this.props.all.last,\n        all: this.props.all,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/admin/Desktop/react-native-app/ascent-web/client/src/components/Dashboard/Dashboard.js"],"names":["React","ClientPick","FrontDash","Link","Navbar","auth","firestore","Dashboard","state","isOpen","componentWillMount","props","all","picked","undefined","handleClientPick","clientPromise","Promise","resolve","reject","onAuthStateChanged","user","newClients","collection","doc","uid","get","then","clients","wait","docs","length","forEach","client","id","newClient","data","push","value","uploadClients","toggle","setState","minHeight","backgroundImage","paddingTop","backgroundColor","height","width","position","marginTop","marginLeft","first","last","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,sBAAhC;AAEA,OAAO,eAAP;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;UAORC,kB,GAAqB,YAAM;AACvB,UAAM,MAAKC,KAAL,CAAWC,GAAX,CAAeC,MAAf,KAA0B,EAA3B,IAAmC,MAAKF,KAAL,CAAWC,GAAX,CAAeC,MAAf,KAA0BC,SAAlE,EAA8E;AAC1E,cAAKH,KAAL,CAAWI,gBAAX,CAA4B,MAAKJ,KAAL,CAAWC,GAAX,CAAeC,MAA3C;AACH;;AACD,UAAIG,aAAa,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvDd,QAAAA,IAAI,CAACe,kBAAL,CAAwB,UAAUC,IAAV,EAAgB;AACpC,cAAIC,UAAU,GAAG,EAAjB;AACAhB,UAAAA,SAAS,CAACiB,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,IAAI,CAACI,GAAvC,EAA4CF,UAA5C,CAAuD,SAAvD,EAAkEG,GAAlE,GACKC,IADL,EAEQ;AACA,oBAACC,OAAD,EAAa;AACT,gBAAIC,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAaC,MAAxB;AACAH,YAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtB3B,cAAAA,SAAS,CAACiB,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCS,MAAM,CAACC,EAAzC,EAA6CR,GAA7C,GACKC,IADL,CAEQ,UAACH,GAAD,EAAS;AACL,oBAAIW,SAAS,GAAGX,GAAG,CAACY,IAAJ,EAAhB;AACAD,gBAAAA,SAAS,CAAC,IAAD,CAAT,GAAkBF,MAAM,CAACC,EAAzB;AACAZ,gBAAAA,UAAU,CAACe,IAAX,CAAgBF,SAAhB;AACAN,gBAAAA,IAAI;;AACJ,oBAAIA,IAAI,KAAK,CAAb,EAAgB;AACZX,kBAAAA,OAAO,CAACI,UAAD,CAAP;AACH;AACJ,eAVT;AAYH,aAbD;AAcH,WAnBT;AAqBH,SAvBD;AAwBH,OAzBmB,CAApB;AA0BAN,MAAAA,aAAa,CAACW,IAAd,CAAmB,UAACW,KAAD,EAAW;AAE1B,cAAK3B,KAAL,CAAW4B,aAAX,CAAyBD,KAAzB;AACH,OAHD;AAIH,K;;UACDE,M,GAAO,YAAI;AACP,YAAKC,QAAL,CAAc;AAAChC,QAAAA,MAAM,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAArB,OAAd;AACH,K;;;;;;;6BAGQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAAEiC,UAAAA,SAAS,EAAE,OAAb;AAAsBC,UAAAA,eAAe,EAAE,sJAAvC;AAA+LC,UAAAA,UAAU,EAAE;AAA3M,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAC,sBAAjB;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAsDC,UAAAA,KAAK,EAAC,MAA5D;AAAmEC,UAAAA,QAAQ,EAAC,UAA5E;AAAuFC,UAAAA,SAAS,EAAC,QAAjG;AAA0GC,UAAAA,UAAU,EAAC;AAArH,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,EAEK,KAAKvC,KAAL,CAAWC,GAAX,CAAeC,MAAf,KAA0B,EAA1B,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACA,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,GAAX,CAAeC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,GAAX,CAAegB,OAD5B;AAEI,QAAA,gBAAgB,EAAE,KAAKjB,KAAL,CAAWI,gBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADC,GAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGA,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,GAAX,CAAeuC,KAD1B;AAEI,QAAA,IAAI,EAAE,KAAKxC,KAAL,CAAWC,GAAX,CAAewC,IAFzB;AAGI,QAAA,GAAG,EAAI,KAAKzC,KAAL,CAAWC,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CAZR,CADJ;AA4BH;;;;EA7EmBZ,KAAK,CAACqD,S;;AA+E9B,eAAe9C,SAAf","sourcesContent":["import React from 'react';\n\nimport ClientPick from '../ClientPick/ClientPick.js'\nimport FrontDash from '../FrontDash/FrontDash.js'\n\nimport { Link } from 'react-router-dom'\nimport Navbar from '../ClientPickNavbar/ClientPickNavbar'\nimport { auth, firestore } from '../firebase/firebase'\n\nimport '../../App.css';\n\nclass Dashboard extends React.Component {\n    state = {\n        isOpen: false\n    }\n\n   \n\n\n    componentWillMount = () => {\n        if (((this.props.all.picked !== '') || (this.props.all.picked !== undefined))){\n            this.props.handleClientPick(this.props.all.picked)\n        }\n        var clientPromise = new Promise(function (resolve, reject) {\n            auth.onAuthStateChanged(function (user) {\n                var newClients = []\n                firestore.collection('Users').doc(user.uid).collection('Clients').get()\n                    .then(\n                        //grab all the clients names\n                        (clients) => {\n                            let wait = clients.docs.length\n                            clients.forEach(client => {\n                                firestore.collection('Users').doc(client.id).get()\n                                    .then(\n                                        (doc) => {\n                                            let newClient = doc.data()\n                                            newClient['id'] = client.id\n                                            newClients.push(newClient)\n                                            wait--\n                                            if (wait === 0) {\n                                                resolve(newClients)\n                                            }\n                                        }\n                                    )\n                            })\n                        }\n                    )\n            })\n        })\n        clientPromise.then((value) => {\n\n            this.props.uploadClients(value)\n        })\n    }\n    toggle=()=>{\n        this.setState({isOpen: !this.state.isOpen})\n    }\n\n\n    render() {\n        return (\n            <div className='container-fluid' style={{ minHeight: '100vh', backgroundImage: 'url(https://images.unsplash.com/photo-1493690283958-32df2c86326e?ixlib=rb-0.3.5&s=b62d34e46e0ddc9b507068c1aab921f9&auto=format&fit=crop&w=1496&q=80)', paddingTop: '100px' }}>\n          <div style={{backgroundColor:'rgba(255,255,255,.5)',height:'100%',width:'100%',position:'absolute',marginTop:'-100px',marginLeft:'-15px'}}></div>\n                {this.props.all.picked === '' ?\n                <div>\n                <Navbar\n                picked={this.props.all.picked}/>\n                    <ClientPick\n                        clients={this.props.all.clients}\n                        handleClientPick={this.props.handleClientPick}\n                    />\n                    </div>\n                    :\n                    <div>\n                        <Navbar\n                        picked={this.props.all.picked}/>\n                    <FrontDash\n                        first={this.props.all.first}\n                        last={this.props.all.last} \n                        all = {this.props.all}/>\n                        </div>\n                }\n            \n            </div>\n\n\n\n        )\n    }\n}\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}